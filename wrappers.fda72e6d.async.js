(self["webpackChunkor_so"]=self["webpackChunkor_so"]||[]).push([[275],{30750:function(n,e,t){"use strict";t.r(e);var r=t(3911),a=t(67294),o=t(46195),s=t(85692);e["default"]=n=>{var e=n.children,t=(0,r.Z)(n,["children"]);return a.createElement(o.Z,t,a.createElement(s.zt,null,e))}},24701:function(n,e,t){"use strict";t.r(e),t.d(e,{default:function(){return S}});var r=t(13378),a=t(67294),o=JSON.parse('{"menus":{"zh-CN":{"*":[{"path":"/","title":"or_so","meta":{}}],"/components":[{"title":"\u5355\u9009\u6309\u94ae","meta":{"__fallback":true},"children":[{"path":"/components/radio","title":"\u8868\u5355","meta":{}}]},{"path":"/components/edit-graph","title":"\u6d41\u7a0b\u56fe\u7f16\u8f91\u5668","meta":{}},{"path":"/components/edit-table","title":"\u590d\u6742\u8868\u5355","meta":{}},{"path":"/components/event-bus","title":"\u4e8b\u4ef6\u603b\u7ebf","meta":{}},{"path":"/components/import-file","title":"\u5bfc\u5165 && \u5bfc\u51fa","meta":{}},{"path":"/components/saga","title":"\u6d41\u7a0b\u56fe\u67e5\u770b","meta":{}},{"path":"/components/use-model","title":"useModel","meta":{}},{"path":"/components/use-set-state","title":"useSetState","meta":{}},{"path":"/components/xgraph","title":"X6","meta":{}}],"/doc":[{"path":"/doc","title":"\u6807\u9898\u5185\u5bb9","meta":{}},{"path":"/doc/description","title":"\u63cf\u8ff0","meta":{}},{"path":"/doc/share","title":"\u5f00\u53d1\u5c0f\u6280\u5de7","meta":{}}],"/guide":[{"path":"/guide","title":"\u6807\u9898\u5185\u5bb9","meta":{}}]}},"locales":[{"name":"zh-CN","label":"\u4e2d\u6587"}],"navs":{"zh-CN":[{"path":"/doc","title":"\u6587\u6863","order":1},{"title":"\u6307\u5357","path":"/guide"},{"path":"/components","title":"\u7ec4\u4ef6"},{"title":"GitHub","path":"https://github.com/mxszs"}]},"title":"or_so","logo":"https://avatars2.githubusercontent.com/u/33783716?s=60&v=4","mode":"site","repository":{"url":"https://github.com/mxszs/or_so","branch":"master","platform":"github"},"theme":{}}'),s=t(68699),i=t(94043),l=t.n(i),c=t(10664),u="import React from 'react';\nimport GraphContextProvider from './Graph/graphContext';\n\nimport Graph from './Graph/Graph';\n\ntype GraphParams = {};\n\nconst EditGraph = () => {\n  return (\n    <GraphContextProvider>\n      <Graph />\n    </GraphContextProvider>\n  );\n};\nexport default EditGraph;",d="import React, { useState, useEffect } from 'react';\nimport { Form, Input, Button, Tabs, Collapse } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nimport { useDynamicList } from 'ahooks';\nimport { editData } from './testData';\nimport FormList from './FormList';\n\ntype AxisItem = {\n  row?: string;\n  column?: string;\n};\n\ntype TeamsItem = {\n  axis: AxisItem[];\n  teamPosition?: string;\n  teamName?: string;\n  type?: string;\n};\n\ntype CommonType = {\n  title?: string;\n  class?: string;\n  teamName?: string;\n  teamPosition?: string;\n  id?: string;\n  type?: string;\n};\n\ninterface ListItem extends CommonType {\n  teams: TeamsItem[];\n}\n\ninterface GradesListItem extends CommonType {\n  teams: TeamsItem;\n}\n\ntype FormValues = {\n  grades: ListItem[];\n};\n\nconst { TabPane } = Tabs;\nconst { Item, List } = Form;\nconst { Panel } = Collapse;\n\nconst defaultList = [\n  {\n    title: '',\n    teams: [\n      {\n        axis: [{}],\n      },\n    ],\n  },\n  {\n    title: '',\n    teams: [\n      {\n        axis: [{}],\n      },\n    ],\n  },\n];\n\nconst EditForm: React.FC = () => {\n  const [params, setParams] = useState({});\n  const [editStatus, setEditStatus] = useState<boolean>(false);\n\n  const { list, push, remove, getKey, resetList } = useDynamicList<ListItem>(\n    defaultList,\n  );\n\n  const [form] = Form.useForm();\n\n  // \u63d0\u4ea4\n  const submit = () => {\n    form.validateFields().then(values => {\n      console.log(values, 'form');\n      const grades: GradesListItem[] = [];\n      (values.grades as FormValues['grades']).forEach(item => {\n        item.teams\n          .filter(item => item)\n          .forEach(teamItem => {\n            grades.push({\n              class: item.class,\n              teamName: teamItem.teamName,\n              teamPosition: teamItem.teamPosition,\n              teams: {\n                axis: teamItem.axis,\n                type: teamItem.type,\n              },\n            });\n          });\n      });\n      const params = {\n        configKey: 'test',\n        param: {\n          grades,\n        },\n      };\n      setParams(params);\n      console.log(params, 'params');\n    });\n  };\n  // \u8bbe\u7f6e\u521d\u503c\n  useEffect(() => {\n    if (editStatus) {\n      resetList(editData);\n      const grades: FormValues['grades'] = [];\n      editData.forEach(item => {\n        const teams: ListItem['teams'] = [];\n        item.teams.forEach(routerItem =>\n          teams.push({\n            ...routerItem,\n            teamName: item.teamName,\n            teamPosition: item.teamPosition,\n          }),\n        );\n        console.log(teams, 'teams');\n        grades.push({\n          class: item.class,\n          teams,\n        });\n      });\n      form.setFieldsValue({ grades: grades });\n    } else {\n      form.setFieldsValue({ grades: defaultList });\n      resetList(defaultList);\n    }\n  }, [editStatus]);\n\n  // \u6dfb\u52a0TabPane\n  const addTabPane = () => {\n    push({\n      title: '',\n      teams: [\n        {\n          axis: [{}],\n        },\n      ],\n    });\n\n    // \u7ed9\u8868\u5355\u6dfb\u52a0\u9ed8\u8ba4\u503c\n    const values = form.getFieldValue('grades');\n    values.push({\n      teams: [\n        {\n          axis: [{}],\n        },\n      ],\n    });\n    form.setFieldsValue({ grades: values });\n  };\n\n  const layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 14 },\n  };\n\n  return (\n    <>\n      <Button\n        style={{ marginBottom: 8 }}\n        type=\"primary\"\n        onClick={() => setEditStatus(!editStatus)}\n      >\n        \u5207\u6362{editStatus ? '\u65b0\u589e' : '\u7f16\u8f91'}\n      </Button>\n      <Form {...layout} labelCol={{ span: 2 }} form={form}>\n        <Tabs\n          type=\"editable-card\"\n          hideAdd\n          tabBarExtraContent={<Button onClick={addTabPane}>\u6dfb\u52a0</Button>}\n        >\n          {list.map((_, index) => (\n            <TabPane\n              forceRender\n              key={`${getKey(index)}`}\n              closeIcon={<CloseOutlined onClick={() => remove(index)} />}\n              tab={`\u73ed\u7ea7 ${getKey(index) + 1}`}\n            >\n              <Item\n                {...layout}\n                label=\"\u73ed\u7ea7\"\n                name={['grades', getKey(index), 'class']}\n                rules={[\n                  {\n                    required: true,\n                    message: '\u8bf7\u586b\u5199\u73ed\u7ea7',\n                  },\n                ]}\n              >\n                <Input placeholder=\"\u8bf7\u586b\u5199\u73ed\u7ea7\" />\n              </Item>\n              <FormList parentIndex={getKey(index)} />\n            </TabPane>\n          ))}\n        </Tabs>\n      </Form>\n      <Button\n        type=\"primary\"\n        style={{ marginTop: 8, width: '100%' }}\n        onClick={submit}\n      >\n        \u63d0\u4ea4\n      </Button>\n      {Object.keys(params).length > 0 && (\n        <pre>{JSON.stringify(params, null, '\\t')}</pre>\n      )}\n    </>\n  );\n};\n\nexport default EditForm;",m="import React from 'react';\nimport { Button } from 'antd';\nimport EventBus from 'or_so/src/myDemo/util/eventBus';\nimport { debounce, throttle } from 'or_so/src/myDemo/util';\n\nconst Test = () => {\n  let i = 1;\n  const emitMyevent1 = (type: number) => {\n    EventBus.dispatchEvent({ type: 'myevent1', a: { test: type } });\n  };\n\n  return (\n    <div>\n      <div style={{ marginBottom: 8 }}>\n        \u4e8b\u4ef6\u4e00\uff1a\n        <Button.Group>\n          <Button onClick={() => debounce(() => emitMyevent1((i += 1)), 800)}>\n            \u9632\u6296\u89e6\u53d1+\n          </Button>\n          <Button onClick={() => throttle(() => emitMyevent1((i -= 1)), 800)}>\n            \u8282\u6d41\u89e6\u53d1-\n          </Button>\n        </Button.Group>\n      </div>\n      <div>\n        \u4e8b\u4ef6\u4e8c\uff1a\n        <Button.Group>\n          <Button\n            onClick={() => EventBus.dispatchEvent({ type: 'myevent2' }, true)}\n          >\n            \u89e6\u53d1\u5b8c\u6210\u540e\u9500\u6bc1\n          </Button>\n        </Button.Group>\n      </div>\n    </div>\n  );\n};\nexport default Test;",p="import React from 'react';\nimport { Button } from 'antd';\nimport EventBus from 'or_so/src/myDemo/util/eventBus';\n\nconst Test = () => {\n  const [state, setState] = React.useState();\n  const fntest1 = React.useCallback(evt => setState(evt), []);\n\n  const fntest2 = React.useCallback(evt => alert(JSON.stringify(evt)), []);\n\n  React.useEffect(() => {\n    EventBus.addEventListener('myevent1', fntest1);\n    EventBus.addEventListener('myevent2', fntest2);\n    return () => {\n      EventBus.removeEventListener('myevent1', fntest1);\n      EventBus.removeEventListener('myevent2', fntest2);\n    };\n  }, []);\n\n  const removeventFn = (type: string, fn: (value: any) => void) => {\n    EventBus.removeEventListener(type, fn);\n  };\n\n  return (\n    <div>\n      <Button\n        style={{ marginRight: 8 }}\n        onClick={() => removeventFn('myevent1', fntest1)}\n      >\n        \u79fb\u9664\u4e8b\u4ef6\u4e00\n      </Button>\n      <Button onClick={() => removeventFn('myevent2', fntest2)}>\n        \u79fb\u9664\u4e8b\u4ef6\u4e8c\n      </Button>\n      <div>{state?.a?.test || '-'}</div>\n    </div>\n  );\n};\nexport default Test;",f="import React, { useState, useEffect } from 'react';\nimport { Upload, message, Button } from 'antd';\nimport {\n  RcFile,\n  UploadChangeParam,\n  UploadFile,\n} from 'antd/lib/upload/interface';\n\n// function getBase64(img, callback) {\n//   const reader = new FileReader();\n//   reader.addEventListener('load', () => callback(reader.result));\n//   reader.readAsDataURL(img);\n// }\nconst preStyle: React.CSSProperties = {\n  whiteSpace: 'pre-wrap',\n  height: 400,\n};\n\nconst Avatar = () => {\n  const [files, setFiles] = useState<RcFile[]>([]);\n  const [fileList, setFilesList] = useState<string[]>([]);\n\n  const beforeUpload = (file: RcFile) => {\n    console.log(file, 'file');\n    const newFiles = [...files];\n    const isJpgOr =\n      file.type === 'application/json' || file.type === 'text/plain';\n    if (!isJpgOr) {\n      message.error('\u6587\u4ef6\u4e0d\u7b26\u5408\u89c4\u5219');\n      return false;\n    }\n    newFiles.push(file);\n    setFiles(newFiles);\n    return false;\n  };\n  const handleChange = ({ file }: UploadChangeParam<UploadFile<any>>) => {\n    const { status } = file;\n    // \u79fb\u9664\u6587\u4ef6\n    if (status === 'removed') {\n      const index = files.indexOf(file as RcFile);\n      const newFileList = files.slice();\n      newFileList.splice(index, 1);\n      setFiles(newFileList);\n    }\n  };\n\n  const loadFile = (data: RcFile[]) => {\n    const promiseAll = [];\n    const reader: FileReader[] = [];\n    for (let i = 0; i < data.length; i += 1) {\n      promiseAll[i] = new Promise(resolve => {\n        reader[i] = new FileReader();\n        reader[i].readAsText(data[i]);\n        reader[i].onload = () => {\n          resolve(reader[i].result);\n        };\n      });\n    }\n    Promise.all(promiseAll)\n      .then(\n        readers => {\n          setFilesList(readers as string[]);\n          setFiles([]);\n        },\n        e => {\n          console.log(111);\n        },\n      )\n      .catch(e => {\n        console.log(222);\n      });\n  };\n\n  const submit = () => {\n    loadFile(files);\n  };\n\n  const download = (context: string, fileName: string) => {\n    console.log(context, 'context');\n    // \u5c06\u5b57\u7b26\u4e32\u8f6c\u6210\u6587\u4ef6\n    // \u83b7\u53d6\u5b57\u7b26\u5185\u5bb9\uff0c\u8f6c\u4e3ablob\u5730\u5740\n    const blob = new Blob([context]);\n    // // blob\u5730\u5740\u8f6c\u4e3aURL\n    const eleLink = document.createElement('a');\n    // const reader = new FileReader();\n    // reader.readAsDataURL(blob)\n    // reader.onload = () => {\n    eleLink.href = URL.createObjectURL(blob);\n    //   eleLink.href = reader.result as string;\n    eleLink.style.display = 'none';\n    eleLink.download = fileName;\n    document.body.appendChild(eleLink);\n    eleLink.click();\n    document.body.removeChild(eleLink);\n    // }\n  };\n\n  const downloadFile = () => {\n    fileList.forEach(item => download(item, `${new Date().getTime()}.json`));\n  };\n\n  return (\n    <div>\n      <Upload\n        beforeUpload={beforeUpload}\n        fileList={files}\n        onChange={handleChange}\n      >\n        <Button>\u9009\u62e9\u6587\u4ef6</Button>\n      </Upload>\n      <Button onClick={submit}>\u63d0\u4ea4</Button>\n      <Button style={{ margin: 8 }} onClick={downloadFile}>\n        \u4e0b\u8f7d\n      </Button>\n      {fileList.map(item => (\n        <pre style={preStyle}>{item}</pre>\n      ))}\n    </div>\n  );\n};\n\nexport default Avatar;",h="import React, { useEffect, useRef } from 'react';\nimport G6 from '@antv/g6';\nimport { data, strokes, colors } from './mock';\nimport './index.less';\n\ntype GraphParams = {};\n\nconst Graph: React.FC<GraphParams> = () => {\n  const GraphRef = useRef<HTMLElement>(null);\n  const minimapRef = useRef(null);\n\n  const renderG6 = () => {\n    const nodes = data.nodes;\n    const clusterMap = new Map();\n    let clusterId = 0;\n    nodes.forEach(function(node: any) {\n      // cluster\n      if (node.cluster && clusterMap.get(node.cluster) === undefined) {\n        clusterMap.set(node.cluster, clusterId);\n        clusterId++;\n      }\n      const cid = clusterMap.get(node.cluster);\n      if (!node.style) node.style = {};\n      node.style.fill = colors[cid % colors.length];\n      node.style.stroke = strokes[cid % strokes.length];\n    });\n    const minimap = new G6.Minimap({\n      container: minimapRef.current,\n      size: [150, 100],\n    });\n    const width = GraphRef.current.getBoundingClientRect().width || 500;\n    const height = GraphRef.current.getBoundingClientRect().height || 500;\n    const graph = new G6.Graph({\n      container: GraphRef.current,\n      width,\n      height,\n      modes: {\n        default: [\n          'zoom-canvas',\n          'drag-canvas',\n          'click-select',\n          'activate-relations',\n        ],\n      },\n      layout: {\n        type: 'dagre',\n        controlPoints: true,\n        ranksep: 20,\n        nodesep: 50,\n      },\n      defaultNode: {\n        size: 20,\n      },\n      defaultEdge: {\n        type: 'polyline',\n        style: {\n          radius: 20,\n          offset: 45,\n          endArrow: true,\n          lineWidth: 2,\n          stroke: '#C2C8D5',\n        },\n      },\n      plugins: [minimap],\n    });\n    graph.data(data);\n    graph.render();\n  };\n\n  useEffect(() => {\n    renderG6();\n  }, []);\n  return (\n    <>\n      <div style={{ height: 500 }} ref={GraphRef}></div>\n      <div ref={minimapRef}></div>\n    </>\n  );\n};\n\nexport default Graph;",g="import React from 'react';\nimport { Button, Space } from 'antd';\nimport { useModel } from 'or_so/src/hooks/useModel';\n\nexport default () => {\n  const { count, plusCount, reduceCount } = useModel('init');\n\n  return (\n    <Space direction=\"vertical\">\n      <Button type=\"primary\">{count}</Button>\n      <Space>\n        <Button onClick={() => plusCount()}>\u6dfb\u52a0</Button>\n        <Button onClick={() => reduceCount()}>\u5220\u51cf</Button>\n      </Space>\n    </Space>\n  );\n};",v="import React from 'react';\nimport { Button, Space } from 'antd';\nimport useSetState from 'or_so/src/hooks/useSetState';\n\ntype State = {\n  hello: string;\n  count: number;\n  [key: string]: any;\n};\n\nexport default () => {\n  // const {  } = useModel('init')\n  const [state, setState] = useSetState<State>({\n    hello: '',\n    count: 0,\n  });\n\n  return (\n    <>\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n      <Space>\n        <Button onClick={() => setState({ hello: 'hello' })}>say hello</Button>\n        <Button onClick={() => setState({ world: 'world' })}>say word</Button>\n        <Button onClick={() => setState(prev => ({ count: prev.count + 1 }))}>\n          count + 1\n        </Button>\n      </Space>\n    </>\n  );\n};",y="import { Graph } from '@antv/x6';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, Space } from 'antd';\nimport { Graph as GraphType } from '@antv/x6/lib/graph';\nimport { DagreLayout } from '@antv/layout';\nimport addonStencil from './utils/stencil';\nimport createNode from './utils/createNodes';\nimport createEdge from './utils/createEdges';\nimport bindKey from './utils/bindKey';\nimport nodeEvent from './utils/nodeEvent';\nimport OperationArea from './components/OperationArea';\nimport EventBus from 'or_so/src/myDemo/util/eventBus';\n\nimport './index.less';\nimport Shape from '@antv/g6/lib/shape';\n\ntype DoSetConfig = {\n  data: {\n    visible: boolean;\n    data: {};\n  };\n};\n\nconst X6: React.FC = () => {\n  const GraphRef = useRef<{ graph: GraphType }>({\n    graph: {} as any,\n  });\n  const [config, setConfig] = useState<{\n    visible: boolean;\n    data: any;\n  }>({\n    visible: false,\n    data: {},\n  });\n\n  const doSetConfig = (params: DoSetConfig) => setConfig(params.data);\n\n  useEffect(() => {\n    EventBus.addEventListener('config', doSetConfig);\n  }, []);\n\n  const renderGraph = () => {\n    // #region \u521d\u59cb\u5316\u753b\u5e03\n    const graph = new Graph({\n      container: document.getElementById('graph-container')!,\n      grid: true,\n      mousewheel: {\n        enabled: true,\n        zoomAtMousePosition: true,\n        modifiers: 'ctrl',\n        minScale: 0.5,\n        maxScale: 3,\n      },\n      scroller: {\n        enabled: true,\n      },\n      minimap: {\n        enabled: true,\n        container: document.getElementById('minimap')!,\n        scalable: false,\n        graphOptions: {\n          async: true,\n          connecting: {\n            router: 'manhattan',\n            connector: {\n              name: 'rounded',\n              args: {\n                radius: 8,\n              },\n            },\n          },\n        },\n      },\n      connecting: {\n        router: 'manhattan',\n        connector: {\n          name: 'rounded',\n          args: {\n            radius: 8,\n          },\n        },\n        anchor: 'center',\n        connectionPoint: 'anchor',\n        allowBlank: false,\n        snap: {\n          radius: 20,\n        },\n        createEdge,\n        validateConnection({ targetMagnet }) {\n          return !!targetMagnet;\n        },\n      },\n      highlighting: {\n        magnetAdsorbed: {\n          name: 'stroke',\n          args: {\n            attrs: {\n              fill: '#5F95FF',\n              stroke: '#5F95FF',\n            },\n          },\n        },\n      },\n      resizing: true,\n      rotating: true,\n      selecting: {\n        enabled: true,\n        rubberband: true,\n        showNodeSelectionBox: true,\n      },\n      snapline: true,\n      keyboard: true,\n      clipboard: true,\n    });\n    // #endregion\n    const stencil = addonStencil(graph);\n    document.getElementById('stencil')!.appendChild(stencil.container);\n    // #endregion\n    // \u5feb\u6377\u952e\n    nodeEvent(graph);\n    // \u5feb\u6377\u952e\n    bindKey(graph);\n    const groups = createNode(graph);\n    Object.entries(groups).forEach(item => {\n      stencil.load(item[1], item[0]);\n    });\n    if (GraphRef.current) {\n      (GraphRef.current as any).graph = graph;\n    }\n  };\n  useEffect(() => {\n    renderGraph();\n  }, []);\n\n  const layout = () => {\n    const dagreLayout = new DagreLayout({\n      type: 'dagre',\n      rankdir: 'TB',\n      ranksep: 40,\n      nodesep: 50,\n      controlPoints: true,\n    });\n    const data = {\n      nodes: GraphRef.current.graph\n        .toJSON()\n        .cells.filter(item => !Reflect.has(item, 'source')),\n      edges: GraphRef.current.graph\n        .toJSON()\n        .cells.filter(item => Reflect.has(item, 'source')),\n    };\n    const model = dagreLayout.layout(data);\n    GraphRef.current.graph.fromJSON(model);\n  };\n\n  return (\n    <div>\n      <Space style={{ padding: '8px 0' }}>\n        <Button onClick={layout}>\u5e03\u5c40</Button>\n      </Space>\n      <div style={{ height: 500 }} id=\"container\">\n        <div id=\"stencil\" />\n        <div id=\"graph-container\" />\n        <div id=\"minimap\" />\n        <OperationArea config={config} graph={GraphRef.current.graph} />\n      </div>\n    </div>\n  );\n};\n\nexport default X6;",x="import React, { useState, forwardRef, useRef, useEffect } from 'react';\nimport { Form, Radio, Button, InputNumber, Select } from 'antd';\nimport classnames from 'classnames';\nimport { test } from './mock';\nimport styles from './index.less';\n\ninterface Props {}\n\ntype RenderRadioType = {\n  list: { port: string; maxReq: number }[];\n  portValue: string;\n  ref: any;\n  onChange?: () => void;\n  getFieldValue?: any;\n  changeMaxReq: (index: number) => void;\n};\n\nconst style = {\n  width: 100,\n};\nconst RenderRadio: React.FC<RenderRadioType> = forwardRef(\n  ({ list, changeMaxReq, portValue, onChange, getFieldValue }, ref: any) => {\n    const [selectValue, setSelectValue] = useState<string | number>(portValue);\n    const getPortValue = getFieldValue('port');\n    const onSelect = (value: React.ReactText, arr: any) => {\n      changeMaxReq(arr.key);\n      setSelectValue(value);\n    };\n\n    useEffect(() => {\n      if (list.findIndex(item => item.port === getPortValue) < 7) {\n        setSelectValue(portValue);\n      }\n    }, [getPortValue]);\n    return (\n      <>\n        <Radio.Group\n          onChange={onChange}\n          value={getPortValue}\n          defaultValue={portValue}\n          ref={ref}\n          buttonStyle=\"solid\"\n        >\n          {list\n            .filter((item, index) => index < 7)\n            .map((item, index) => (\n              <Radio.Button\n                onClick={() => changeMaxReq(index)}\n                key={item.port}\n                value={item.port}\n              >\n                {item.port}\n              </Radio.Button>\n            ))}\n          <Select\n            onSelect={onSelect}\n            className={classnames({\n              [styles.selcetStyle]: list\n                .filter((item, index) => index >= 7)\n                .map(item => item.port)\n                .includes(getPortValue),\n              [styles.defaultSelectStyle]: true,\n            })}\n            value={selectValue}\n            style={style}\n            onChange={onChange}\n          >\n            <Select.Option key={0} value={portValue}>\n              \u9009\u62e9\u7aef\u53e3\n            </Select.Option>\n            {list\n              .filter((item, index) => index >= 7)\n              .map((item, index) => (\n                <Select.Option key={index + 7} value={item.port}>\n                  {item.port}\n                </Select.Option>\n              ))}\n          </Select>\n        </Radio.Group>\n      </>\n    );\n  },\n);\n\nconst RadioButtonGroup: React.FC<Props> = () => {\n  const [value, setValue] = useState({});\n  const [form] = Form.useForm();\n  const renderRef = useRef<any>(null);\n  const onFinish = (values: any) => {\n    setValue(values);\n  };\n  const changeMaxReq = (index: number) => {\n    form.setFieldsValue({ maxReq: test[index].maxReq });\n  };\n  return (\n    <>\n      <Form\n        onFinish={onFinish}\n        initialValues={{ port: test[0].port, maxReq: test[0].maxReq }}\n        form={form}\n      >\n        <Form.Item name=\"port\" rules={[{ required: true }]}>\n          <RenderRadio\n            ref={renderRef}\n            getFieldValue={form.getFieldValue}\n            portValue={test[0].port}\n            list={test}\n            changeMaxReq={changeMaxReq}\n          />\n        </Form.Item>\n        <Form.Item name=\"maxReq\">\n          <InputNumber />\n        </Form.Item>\n        <Button htmlType=\"submit\">\u63d0\u4ea4</Button>\n      </Form>\n      <div>{JSON.stringify(value, null, 2)}</div>\n    </>\n  );\n};\n\nexport default RadioButtonGroup;",b="import React from 'react';\nimport { Form, Input } from 'antd';\nimport { FormItemProps } from 'antd/lib/form';\n\ninterface FormConfigProps extends FormItemProps {\n  children: React.ReactNode;\n}\n\nconst FormShare: React.FC = () => {\n  const [form] = Form.useForm();\n\n  const formConfig: FormConfigProps[] = [\n    {\n      name: 'id1',\n      label: 'xx1',\n      rules: [\n        {\n          required: true,\n          whitespace: true,\n          message: 'xxxx',\n        },\n      ],\n      required: true,\n      children: <Input />,\n    },\n    {\n      name: 'id2',\n      label: 'xx2',\n      rules: [],\n      required: false,\n      children: <Input />,\n    },\n  ];\n\n  return (\n    <Form layout=\"vertical\" form={form}>\n      {formConfig.map(item => (\n        <Form.Item {...item} />\n      ))}\n    </Form>\n  );\n};\nexport default FormShare;",R={"mydemo-editgraph":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,48737));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:u}},dependencies:{react:{version:"16.14.0"},or_so:{}},identifier:"mydemo-editgraph"}},"mydemo-edittable":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,77791));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:d}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:"^16.8.6 || ^17.0"},"@ant-design/icons":{version:"4.7.0"},ahooks:{version:"2.10.14"},or_so:{},"react-dom":{version:">=16.0.0"}},identifier:"mydemo-edittable"}},"eventbus-testeventbus":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,95492));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:m}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"eventbus-testeventbus"}},"mydemo-eventbus":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,85897));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:p}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-eventbus"}},"mydemo-importfile":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,49399));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:f}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-importfile"}},"mydemo-graph":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,18863));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:h}},dependencies:{react:{version:"16.14.0"},"@antv/g6":{version:"3.8.5"},or_so:{}},identifier:"mydemo-graph"}},"mydemo-usemodel":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,87855));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:g}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-usemodel"}},"mydemo-usesetstate":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,37091));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:v}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-usesetstate"}},"mydemo-xgraph":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,94355));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:y}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},"@antv/x6":{version:"1.28.1",css:"@antv/x6/dist/x6.css"},react:{version:">=16.9.0"},"@antv/layout":{version:"0.1.22"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-xgraph"}},"form-radiobutton":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,87553));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:x}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},classnames:{version:"2.3.1"},or_so:{},"react-dom":{version:">=16.9.0"}},identifier:"form-radiobutton"}},"mydemo-share":{component:(0,c.dynamic)({loader:function(){var n=(0,s.Z)(l().mark((function n(){return l().wrap((function(n){while(1)switch(n.prev=n.next){case 0:return n.next=2,Promise.all([t.e(719),t.e(187),t.e(50)]).then(t.bind(t,58295));case 2:return n.abrupt("return",n.sent.default);case 3:case"end":return n.stop()}}),n)})));function e(){return n.apply(this,arguments)}return e}(),loading:()=>null}),previewerProps:{sources:{_:{tsx:b}},dependencies:{antd:{version:"4.17.3",css:"antd/dist/antd.css"},react:{version:">=16.9.0"},"react-dom":{version:">=16.9.0"}},identifier:"mydemo-share"}}},F={},w=t(49215),S=n=>a.createElement(w.Z,(0,r.Z)({},n,{config:o,demos:R,apis:F}))},85692:function(n,e,t){"use strict";t.d(e,{zt:function(){return g},tT:function(){return v}});var r=t(44742),a=t(67294);class o{constructor(){this.data={},this.callBacks={},this.update=n=>{(this.callBacks[n]||[]).forEach((e=>{try{var t=this.data[n];e(t)}catch(r){e(void 0)}}))}}}var s=n=>{var e=n.hook,t=(n.namespace,n.onUpdate),r=(0,a.useRef)(t);r.current=t;var o,s=(0,a.useRef)(!1);try{o="function"===typeof e?e():null}catch(i){throw new TypeError(i)}return(0,a.useMemo)((()=>{r.current(o),s.current=!1}),[]),(0,a.useEffect)((()=>{s.current?r.current(o):s.current=!0})),a.createElement(a.Fragment,null)},i=s,l=t(17069),c=t(27171),u={init:l.Z,test:c.Z},d=u,m=(0,a.createContext)({}),p=new o,f=i,h=n=>{var e=n.children;return a.createElement(m.Provider,{value:p},Object.keys(d).map((n=>a.createElement(f,{key:n,namespace:n,hook:d[n],onUpdate:e=>{p.data[n]=e,p.update(n)}}))),e)},g=h,v=n=>{var e=(0,a.useContext)(m),t=(0,a.useRef)(!1),o=(0,a.useState)(e.data[n]),s=(0,r.Z)(o,2),i=s[0],l=s[1];return(0,a.useEffect)((()=>(t.current=!0,()=>{t.current=!1})),[]),(0,a.useEffect)((()=>{var r=r=>{t.current?l(r):setTimeout((()=>{e.data[n]=r,e.update(n)}))};try{e.callBacks[n].add(r),e.update(n)}catch(a){e.callBacks[n]=new Set,e.callBacks[n].add(r),e.update(n)}return()=>{e.callBacks[n].delete(r)}}),[n]),i}}}]);